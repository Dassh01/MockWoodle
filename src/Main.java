import java.io.File;import java.io.FileNotFoundException;import java.util.ArrayList;import java.util.Random;import java.util.Scanner;public class Main extends beaUtils {    private static final String infoText = "\nThe number in " + GREEN + "green " + RESET + "corresponds to the amount of letters that match the session word" +            "\nThe number in " + YELLOW + "yellow " + RESET + "corresponds to the amount of letters that are present in your word and ALSO present in the session word but not in the right place" +            "\nThe white number corresponds to the guess # your word was tried in" +            "\n\nType -help to display this info again";    private static String grabWord(File file) throws FileNotFoundException {        Scanner wordGrabber = new Scanner(file);        ArrayList<String> words = new ArrayList<>();        while (wordGrabber.hasNextLine()) {            words.add(wordGrabber.nextLine());        }        int posToGrab = new Random().nextInt(words.size());        return words.get(posToGrab);    }    private static ArrayList<Integer> getPositionsToSkip(String userInp, String sessionWord) {        ArrayList<Integer> positions = new ArrayList<>();        for (int pos = 0; pos < 5; ++pos) {            if (userInp.substring(pos, pos + 1).equals(sessionWord.substring(pos, pos + 1))) {                positions.add(pos);            }        }        return positions;    }    private static int getAmountOfLettersInCorrectPosition(String userInp, String sessionWord) {        int amountOfLettersInCorrectPosition = 0;        for (int pos = 0; pos < 5; ++pos) {            if (userInp.substring(pos, pos + 1).equals(sessionWord.substring(pos, pos + 1))) {                ++amountOfLettersInCorrectPosition;            }        }        return amountOfLettersInCorrectPosition;    }    private static int getLettersPresentInWordButInWrongPlace(String userInp, String sessionWord) {        int amountOfLettersPresentInWord = 0;        ArrayList<Integer> positionsToSkip = getPositionsToSkip(userInp, sessionWord);        for (int pos = 0; pos < 5; ++pos) {            if (positionsToSkip.contains(pos)) { continue; }            if (sessionWord.indexOf(userInp.substring(pos, pos + 1)) != -1) {                ++amountOfLettersPresentInWord;            }        }        return amountOfLettersPresentInWord;    }    private static String forceFiveLetterWord(Scanner systemInputScanner,String sessionWord) {        String userGuess = "!";        System.out.println();        while (!(userGuess.length() == 5 && onlyContainsAlphabeticalCharacters(userGuess))) {            userGuess = askForThing("Enter a 5 letter word: ", Scanner::nextLine, systemInputScanner);            if (userGuess.substring(0,1).equals("-")) {                switch (userGuess.substring(1,5)) {                    case ("help"):                        System.out.println(infoText);                        break;                    case ("sesw"):                        System.out.println("\nSession word: "+sessionWord);                        break;                }            }        }        return userGuess;    }    private static void displayPreviousGuesses(ArrayList<String> previousGuesses) {        if (!previousGuesses.isEmpty()) {System.out.println("+-------------+");}        for (int i = 0; i < previousGuesses.size(); ++i) {            System.out.println("| " + i + " " + previousGuesses.get(i) + " |");        }        if (!previousGuesses.isEmpty()) {System.out.println("+-------------+");}    }    private static void refreshConsole() {        System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");    }    private static boolean onlyContainsAlphabeticalCharacters(String string) {        for (int i = 0; i < string.length(); i++) {            String letter = string.substring(i, i + 1);            if (!Character.isAlphabetic(letter.charAt(0))) {                return false;            }        }        return true;    }    public static void main(String[] args) throws FileNotFoundException{        ArrayList<String> previousGuesses = new ArrayList<>();        Scanner sysinp = new Scanner(System.in);        final File wordsLib = new File("src/words");        String sessionWord = grabWord(wordsLib);        //Declare variable outside of loop to save garbage collector some effort        String userGuess;        String lettersInCorrectPos;        String lettersPresentInWord;        String formattedGuess;        System.out.println(infoText);        while (true) {            //Take user input            userGuess = forceFiveLetterWord(sysinp,sessionWord);            refreshConsole();            //Base variables off of user input            displayPreviousGuesses(previousGuesses);            lettersInCorrectPos = " " + GREEN + getAmountOfLettersInCorrectPosition(userGuess,sessionWord) + RESET;            lettersPresentInWord = " " + YELLOW + getLettersPresentInWordButInWrongPlace(userGuess,sessionWord) + RESET;            formattedGuess = userGuess + lettersInCorrectPos + lettersPresentInWord;            //If the user got it wrong            if (!userGuess.equalsIgnoreCase(sessionWord)) {                previousGuesses.add(formattedGuess);                System.out.println(formattedGuess);            }            //If the user got it right            else {                if (userInputBoolean(askForThing("\nCorrect! Play again? (y/n): ",Scanner::nextLine, sysinp))) {                    sessionWord = grabWord(wordsLib);                    previousGuesses.clear();                }                else {                    break;                }            }        }    }}